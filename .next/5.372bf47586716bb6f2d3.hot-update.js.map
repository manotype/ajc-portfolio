{"version":3,"file":"5.372bf47586716bb6f2d3.hot-update.js","sources":["webpack:///pages/work.js"],"sourcesContent":["import React, { Component } from 'react'\nimport Layout from '../components/MyLayout'\nimport WorkHero from '../components/WorkHero'\nimport ContentMultiColumn from '../components/ContentMultiColumn'\nimport ContentLargeFeature from '../components/ContentLargeFeature'\nimport ContentMediumFeature from '../components/ContentMediumFeature'\nimport ContentMediumFeatureRev from '../components/ContentMediumFeature-rev'\nimport MultiColumnItem from '../components/MultiColumnItem'\nimport ContentText from '../components/ContentText'\nimport Pieces from '../components/Pieces'\nimport NavPieces from '../components/NavPieces'\n\nclass Work extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { \"Piece\" : [] }\n    this.state = { \"Sections\": []}\n    this.state = { \"PieceID\": Number() }\n    this.placeComponent = this.placeComponent.bind(this)\n    this.state = { \"Screen\":\"\" }\n  }\n\n  componentWillMount() {\n    const id = this.props.url.query.id - 1\n    const piece = Object.keys(Pieces).map((key)=> {\n      (Number(key) === id) ? (\n        this.setState({Piece:Pieces[key]})\n      ):('')\n    })\n    this.setState({PieceID:Number(this.props.url.query.id)})\n  }\n\n  componentDidMount() {\n    if(window.innerWidth > 600) {\n      this.setState({Screen:\"large\"})\n    } else {\n      this.setState({Screen:\"small\"})\n    }\n  }\n\n  placeComponent(sectionTag,key) {\n    switch(sectionTag) {\n      case 'columns':\n        return (\n        <ContentMultiColumn>\n          <MultiColumnItem img={this.state.Piece.details.sections[key].img1} caption={this.state.Piece.details.sections[key].caption1} copy={this.state.Piece.details.sections[key].copy1} />\n          <MultiColumnItem img={this.state.Piece.details.sections[key].img2} caption={this.state.Piece.details.sections[key].caption2} copy={this.state.Piece.details.sections[key].copy2}  />\n          <MultiColumnItem img={this.state.Piece.details.sections[key].img3} caption={this.state.Piece.details.sections[key].caption3} copy={this.state.Piece.details.sections[key].copy3}  />\n        </ContentMultiColumn>\n        )\n      case 'large':\n        return <ContentLargeFeature hero={this.state.Piece.details.sections[key].img} size={this.state.Screen}>{this.state.Piece.details.sections[key].p}</ContentLargeFeature>\n      case 'medium':\n        return <ContentMediumFeature hero={this.state.Piece.details.sections[key].img} size={this.state.Screen}>{this.state.Piece.details.sections[key].p}</ContentMediumFeature>\n      case 'medium-rev':\n        return <ContentMediumFeatureRev hero={this.state.Piece.details.sections[key].img} size={this.state.Screen}>{this.state.Piece.details.sections[key].p}</ContentMediumFeatureRev>\n      case 'text':\n        return <ContentText headline={this.state.Piece.details.sections[key].headline} copy={this.state.Piece.details.sections[key].copy}>{ (this.state.Piece.details.sections[key].result) ? (<p><span className=\"statistic\">{this.state.Piece.details.sections[key].result}</span><span className=\"caption\">{this.state.Piece.details.sections[key].caption}</span></p>) : ('') }</ContentText>\n    }\n  }\n\n  render() {\n    let piece = this.state.Piece\n    let section = this.state.Piece.details.sections\n    let sectionTag = ''\n    let sectionId = Number()\n    let sectionDetails = []\n\n    return(\n      <Layout>\n        <WorkHero hero={`${piece.details.hero}`} hero-sm={`${piece.details.hero-sm}`} size={this.state.Screen}>\n          <h1>{piece.name}</h1>\n          <div className=\"overview\">\n            <p>{piece.details.about}</p>\n          </div>\n        </WorkHero>\n          {\n            Object.keys(piece.details.sections).map((key)=> {\n              sectionTag = section[Number(key)].tag\n              sectionId = Number(key)\n              return this.placeComponent(sectionTag,sectionId)\n            })\n          }\n          <h2 className=\"container\">View Other Work</h2>\n          <NavPieces id={this.state.PieceID} />\n      </Layout>\n    )\n  }\n}\nexport default Work\n\n\n\n// WEBPACK FOOTER //\n// pages/work.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAPA;AAQA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAhBA;AAkBA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;AA5EA;AACA;AA6EA;AAAA;;;;;;;;;;;;AA9EA;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}